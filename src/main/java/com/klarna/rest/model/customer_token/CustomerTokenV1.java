/*
 * Customer Tokens
 * The Customer Token API is used to charge customers with a tokenized Klarna payment method and can be used for recurring purchases, subscriptions and for storing a customer's payment method. Tokens are created using the [generate a customer token](#payments-api-generate-a-consumer-token) call in the payments API.
 *
 * OpenAPI spec version: 3.0
 * Contact: developers-experience@klarna.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.klarna.rest.model.customer_token;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;

/**
 * CustomerTokenV1
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-09-28T10:56:24.306Z")
public class CustomerTokenV1 {
  @JsonProperty("payment_method_type")
  private String paymentMethodType = null;

  @JsonProperty("status")
  private String status = null;

  public CustomerTokenV1 paymentMethodType(String paymentMethodType) {
    this.paymentMethodType = paymentMethodType;
    return this;
  }

   /**
   * Selected payment method
   * @return paymentMethodType
  **/
  @ApiModelProperty(example = "INVOICE", required = true, value = "Selected payment method")
  public String getPaymentMethodType() {
    return paymentMethodType;
  }

  public void setPaymentMethodType(String paymentMethodType) {
    this.paymentMethodType = paymentMethodType;
  }

  public CustomerTokenV1 status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Status of token, can be active, cancelled, suspended
   * @return status
  **/
  @ApiModelProperty(example = "ACTIVE", required = true, value = "Status of token, can be active, cancelled, suspended")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerTokenV1 customerTokenV1 = (CustomerTokenV1) o;
    return Objects.equals(this.paymentMethodType, customerTokenV1.paymentMethodType) &&
        Objects.equals(this.status, customerTokenV1.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paymentMethodType, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerTokenV1 {\n");
    
    sb.append("    paymentMethodType: ").append(toIndentedString(paymentMethodType)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

