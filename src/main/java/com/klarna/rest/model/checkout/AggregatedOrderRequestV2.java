/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.klarna.rest.model.checkout;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.threeten.bp.OffsetDateTime;

/**
 * AggregatedOrderRequestV2
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-09-06T10:31:49.433Z")
public class AggregatedOrderRequestV2 {
  @JsonProperty("locale")
  private String locale = null;

  @JsonProperty("cart")
  private AggregatedOrderCartV2 cart = null;

  @JsonProperty("customer")
  private CustomerV2 customer = null;

  @JsonProperty("gui")
  private Gui gui = null;

  @JsonProperty("merchant")
  private MerchantAggregatedOrderV2 merchant = null;

  @JsonProperty("options")
  private Options options = null;

  @JsonProperty("attachment")
  private Attachment attachment = null;

  @JsonProperty("recurring")
  private Boolean recurring = false;

  @JsonProperty("reservation")
  private String reservation = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("started_at")
  private OffsetDateTime startedAt = null;

  @JsonProperty("completed_at")
  private OffsetDateTime completedAt = null;

  @JsonProperty("last_modified_at")
  private OffsetDateTime lastModifiedAt = null;

  @JsonProperty("expires_at")
  private OffsetDateTime expiresAt = null;

  @JsonProperty("purchase_country")
  private String purchaseCountry = null;

  @JsonProperty("purchase_currency")
  private String purchaseCurrency = null;

  @JsonProperty("merchant_reference")
  private Map<String, String> merchantReference = null;

  @JsonProperty("billing_address")
  private AggregatedOrderAddressV2 billingAddress = null;

  @JsonProperty("shipping_address")
  private AggregatedOrderAddressV2 shippingAddress = null;

  @JsonProperty("trader_id")
  private String traderId = null;

  @JsonProperty("external_payment_methods")
  private List<AggregatedOrderPaymentProviderV2> externalPaymentMethods = null;

  @JsonProperty("external_checkouts")
  private List<AggregatedOrderPaymentProviderV2> externalCheckouts = null;

  @JsonProperty("merchant_order_data")
  private String merchantOrderData = null;

  @JsonProperty("merchant_requested")
  private MerchantRequested merchantRequested = null;

  public AggregatedOrderRequestV2 locale(String locale) {
    this.locale = locale;
    return this;
  }

   /**
   * Get locale
   * @return locale
  **/
  @ApiModelProperty(value = "")
  public String getLocale() {
    return locale;
  }

  public void setLocale(String locale) {
    this.locale = locale;
  }

  public AggregatedOrderRequestV2 cart(AggregatedOrderCartV2 cart) {
    this.cart = cart;
    return this;
  }

   /**
   * Get cart
   * @return cart
  **/
  @ApiModelProperty(required = true, value = "")
  public AggregatedOrderCartV2 getCart() {
    return cart;
  }

  public void setCart(AggregatedOrderCartV2 cart) {
    this.cart = cart;
  }

  public AggregatedOrderRequestV2 customer(CustomerV2 customer) {
    this.customer = customer;
    return this;
  }

   /**
   * Get customer
   * @return customer
  **/
  @ApiModelProperty(value = "")
  public CustomerV2 getCustomer() {
    return customer;
  }

  public void setCustomer(CustomerV2 customer) {
    this.customer = customer;
  }

  public AggregatedOrderRequestV2 gui(Gui gui) {
    this.gui = gui;
    return this;
  }

   /**
   * Get gui
   * @return gui
  **/
  @ApiModelProperty(value = "")
  public Gui getGui() {
    return gui;
  }

  public void setGui(Gui gui) {
    this.gui = gui;
  }

  public AggregatedOrderRequestV2 merchant(MerchantAggregatedOrderV2 merchant) {
    this.merchant = merchant;
    return this;
  }

   /**
   * Get merchant
   * @return merchant
  **/
  @ApiModelProperty(value = "")
  public MerchantAggregatedOrderV2 getMerchant() {
    return merchant;
  }

  public void setMerchant(MerchantAggregatedOrderV2 merchant) {
    this.merchant = merchant;
  }

  public AggregatedOrderRequestV2 options(Options options) {
    this.options = options;
    return this;
  }

   /**
   * Get options
   * @return options
  **/
  @ApiModelProperty(value = "")
  public Options getOptions() {
    return options;
  }

  public void setOptions(Options options) {
    this.options = options;
  }

  public AggregatedOrderRequestV2 attachment(Attachment attachment) {
    this.attachment = attachment;
    return this;
  }

   /**
   * Get attachment
   * @return attachment
  **/
  @ApiModelProperty(value = "")
  public Attachment getAttachment() {
    return attachment;
  }

  public void setAttachment(Attachment attachment) {
    this.attachment = attachment;
  }

  public AggregatedOrderRequestV2 recurring(Boolean recurring) {
    this.recurring = recurring;
    return this;
  }

   /**
   * Get recurring
   * @return recurring
  **/
  @ApiModelProperty(value = "")
  public Boolean isRecurring() {
    return recurring;
  }

  public void setRecurring(Boolean recurring) {
    this.recurring = recurring;
  }

  public AggregatedOrderRequestV2 reservation(String reservation) {
    this.reservation = reservation;
    return this;
  }

   /**
   * Get reservation
   * @return reservation
  **/
  @ApiModelProperty(value = "")
  public String getReservation() {
    return reservation;
  }

  public void setReservation(String reservation) {
    this.reservation = reservation;
  }

  public AggregatedOrderRequestV2 id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public AggregatedOrderRequestV2 startedAt(OffsetDateTime startedAt) {
    this.startedAt = startedAt;
    return this;
  }

   /**
   * Get startedAt
   * @return startedAt
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getStartedAt() {
    return startedAt;
  }

  public void setStartedAt(OffsetDateTime startedAt) {
    this.startedAt = startedAt;
  }

  public AggregatedOrderRequestV2 completedAt(OffsetDateTime completedAt) {
    this.completedAt = completedAt;
    return this;
  }

   /**
   * Get completedAt
   * @return completedAt
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCompletedAt() {
    return completedAt;
  }

  public void setCompletedAt(OffsetDateTime completedAt) {
    this.completedAt = completedAt;
  }

  public AggregatedOrderRequestV2 lastModifiedAt(OffsetDateTime lastModifiedAt) {
    this.lastModifiedAt = lastModifiedAt;
    return this;
  }

   /**
   * Get lastModifiedAt
   * @return lastModifiedAt
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getLastModifiedAt() {
    return lastModifiedAt;
  }

  public void setLastModifiedAt(OffsetDateTime lastModifiedAt) {
    this.lastModifiedAt = lastModifiedAt;
  }

  public AggregatedOrderRequestV2 expiresAt(OffsetDateTime expiresAt) {
    this.expiresAt = expiresAt;
    return this;
  }

   /**
   * Get expiresAt
   * @return expiresAt
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getExpiresAt() {
    return expiresAt;
  }

  public void setExpiresAt(OffsetDateTime expiresAt) {
    this.expiresAt = expiresAt;
  }

  public AggregatedOrderRequestV2 purchaseCountry(String purchaseCountry) {
    this.purchaseCountry = purchaseCountry;
    return this;
  }

   /**
   * Get purchaseCountry
   * @return purchaseCountry
  **/
  @ApiModelProperty(value = "")
  public String getPurchaseCountry() {
    return purchaseCountry;
  }

  public void setPurchaseCountry(String purchaseCountry) {
    this.purchaseCountry = purchaseCountry;
  }

  public AggregatedOrderRequestV2 purchaseCurrency(String purchaseCurrency) {
    this.purchaseCurrency = purchaseCurrency;
    return this;
  }

   /**
   * Get purchaseCurrency
   * @return purchaseCurrency
  **/
  @ApiModelProperty(value = "")
  public String getPurchaseCurrency() {
    return purchaseCurrency;
  }

  public void setPurchaseCurrency(String purchaseCurrency) {
    this.purchaseCurrency = purchaseCurrency;
  }

  public AggregatedOrderRequestV2 merchantReference(Map<String, String> merchantReference) {
    this.merchantReference = merchantReference;
    return this;
  }

  public AggregatedOrderRequestV2 putMerchantReferenceItem(String key, String merchantReferenceItem) {
    if (this.merchantReference == null) {
      this.merchantReference = new HashMap<String, String>();
    }
    this.merchantReference.put(key, merchantReferenceItem);
    return this;
  }

   /**
   * Get merchantReference
   * @return merchantReference
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getMerchantReference() {
    return merchantReference;
  }

  public void setMerchantReference(Map<String, String> merchantReference) {
    this.merchantReference = merchantReference;
  }

  public AggregatedOrderRequestV2 billingAddress(AggregatedOrderAddressV2 billingAddress) {
    this.billingAddress = billingAddress;
    return this;
  }

   /**
   * Get billingAddress
   * @return billingAddress
  **/
  @ApiModelProperty(value = "")
  public AggregatedOrderAddressV2 getBillingAddress() {
    return billingAddress;
  }

  public void setBillingAddress(AggregatedOrderAddressV2 billingAddress) {
    this.billingAddress = billingAddress;
  }

  public AggregatedOrderRequestV2 shippingAddress(AggregatedOrderAddressV2 shippingAddress) {
    this.shippingAddress = shippingAddress;
    return this;
  }

   /**
   * Get shippingAddress
   * @return shippingAddress
  **/
  @ApiModelProperty(value = "")
  public AggregatedOrderAddressV2 getShippingAddress() {
    return shippingAddress;
  }

  public void setShippingAddress(AggregatedOrderAddressV2 shippingAddress) {
    this.shippingAddress = shippingAddress;
  }

  public AggregatedOrderRequestV2 traderId(String traderId) {
    this.traderId = traderId;
    return this;
  }

   /**
   * Get traderId
   * @return traderId
  **/
  @ApiModelProperty(value = "")
  public String getTraderId() {
    return traderId;
  }

  public void setTraderId(String traderId) {
    this.traderId = traderId;
  }

  public AggregatedOrderRequestV2 externalPaymentMethods(List<AggregatedOrderPaymentProviderV2> externalPaymentMethods) {
    this.externalPaymentMethods = externalPaymentMethods;
    return this;
  }

  public AggregatedOrderRequestV2 addExternalPaymentMethodsItem(AggregatedOrderPaymentProviderV2 externalPaymentMethodsItem) {
    if (this.externalPaymentMethods == null) {
      this.externalPaymentMethods = new ArrayList<AggregatedOrderPaymentProviderV2>();
    }
    this.externalPaymentMethods.add(externalPaymentMethodsItem);
    return this;
  }

   /**
   * Get externalPaymentMethods
   * @return externalPaymentMethods
  **/
  @ApiModelProperty(value = "")
  public List<AggregatedOrderPaymentProviderV2> getExternalPaymentMethods() {
    return externalPaymentMethods;
  }

  public void setExternalPaymentMethods(List<AggregatedOrderPaymentProviderV2> externalPaymentMethods) {
    this.externalPaymentMethods = externalPaymentMethods;
  }

  public AggregatedOrderRequestV2 externalCheckouts(List<AggregatedOrderPaymentProviderV2> externalCheckouts) {
    this.externalCheckouts = externalCheckouts;
    return this;
  }

  public AggregatedOrderRequestV2 addExternalCheckoutsItem(AggregatedOrderPaymentProviderV2 externalCheckoutsItem) {
    if (this.externalCheckouts == null) {
      this.externalCheckouts = new ArrayList<AggregatedOrderPaymentProviderV2>();
    }
    this.externalCheckouts.add(externalCheckoutsItem);
    return this;
  }

   /**
   * Get externalCheckouts
   * @return externalCheckouts
  **/
  @ApiModelProperty(value = "")
  public List<AggregatedOrderPaymentProviderV2> getExternalCheckouts() {
    return externalCheckouts;
  }

  public void setExternalCheckouts(List<AggregatedOrderPaymentProviderV2> externalCheckouts) {
    this.externalCheckouts = externalCheckouts;
  }

  public AggregatedOrderRequestV2 merchantOrderData(String merchantOrderData) {
    this.merchantOrderData = merchantOrderData;
    return this;
  }

   /**
   * Get merchantOrderData
   * @return merchantOrderData
  **/
  @ApiModelProperty(value = "")
  public String getMerchantOrderData() {
    return merchantOrderData;
  }

  public void setMerchantOrderData(String merchantOrderData) {
    this.merchantOrderData = merchantOrderData;
  }

  public AggregatedOrderRequestV2 merchantRequested(MerchantRequested merchantRequested) {
    this.merchantRequested = merchantRequested;
    return this;
  }

   /**
   * Get merchantRequested
   * @return merchantRequested
  **/
  @ApiModelProperty(value = "")
  public MerchantRequested getMerchantRequested() {
    return merchantRequested;
  }

  public void setMerchantRequested(MerchantRequested merchantRequested) {
    this.merchantRequested = merchantRequested;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AggregatedOrderRequestV2 aggregatedOrderRequestV2 = (AggregatedOrderRequestV2) o;
    return Objects.equals(this.locale, aggregatedOrderRequestV2.locale) &&
        Objects.equals(this.cart, aggregatedOrderRequestV2.cart) &&
        Objects.equals(this.customer, aggregatedOrderRequestV2.customer) &&
        Objects.equals(this.gui, aggregatedOrderRequestV2.gui) &&
        Objects.equals(this.merchant, aggregatedOrderRequestV2.merchant) &&
        Objects.equals(this.options, aggregatedOrderRequestV2.options) &&
        Objects.equals(this.attachment, aggregatedOrderRequestV2.attachment) &&
        Objects.equals(this.recurring, aggregatedOrderRequestV2.recurring) &&
        Objects.equals(this.reservation, aggregatedOrderRequestV2.reservation) &&
        Objects.equals(this.id, aggregatedOrderRequestV2.id) &&
        Objects.equals(this.startedAt, aggregatedOrderRequestV2.startedAt) &&
        Objects.equals(this.completedAt, aggregatedOrderRequestV2.completedAt) &&
        Objects.equals(this.lastModifiedAt, aggregatedOrderRequestV2.lastModifiedAt) &&
        Objects.equals(this.expiresAt, aggregatedOrderRequestV2.expiresAt) &&
        Objects.equals(this.purchaseCountry, aggregatedOrderRequestV2.purchaseCountry) &&
        Objects.equals(this.purchaseCurrency, aggregatedOrderRequestV2.purchaseCurrency) &&
        Objects.equals(this.merchantReference, aggregatedOrderRequestV2.merchantReference) &&
        Objects.equals(this.billingAddress, aggregatedOrderRequestV2.billingAddress) &&
        Objects.equals(this.shippingAddress, aggregatedOrderRequestV2.shippingAddress) &&
        Objects.equals(this.traderId, aggregatedOrderRequestV2.traderId) &&
        Objects.equals(this.externalPaymentMethods, aggregatedOrderRequestV2.externalPaymentMethods) &&
        Objects.equals(this.externalCheckouts, aggregatedOrderRequestV2.externalCheckouts) &&
        Objects.equals(this.merchantOrderData, aggregatedOrderRequestV2.merchantOrderData) &&
        Objects.equals(this.merchantRequested, aggregatedOrderRequestV2.merchantRequested);
  }

  @Override
  public int hashCode() {
    return Objects.hash(locale, cart, customer, gui, merchant, options, attachment, recurring, reservation, id, startedAt, completedAt, lastModifiedAt, expiresAt, purchaseCountry, purchaseCurrency, merchantReference, billingAddress, shippingAddress, traderId, externalPaymentMethods, externalCheckouts, merchantOrderData, merchantRequested);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AggregatedOrderRequestV2 {\n");
    
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    cart: ").append(toIndentedString(cart)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    gui: ").append(toIndentedString(gui)).append("\n");
    sb.append("    merchant: ").append(toIndentedString(merchant)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    attachment: ").append(toIndentedString(attachment)).append("\n");
    sb.append("    recurring: ").append(toIndentedString(recurring)).append("\n");
    sb.append("    reservation: ").append(toIndentedString(reservation)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    startedAt: ").append(toIndentedString(startedAt)).append("\n");
    sb.append("    completedAt: ").append(toIndentedString(completedAt)).append("\n");
    sb.append("    lastModifiedAt: ").append(toIndentedString(lastModifiedAt)).append("\n");
    sb.append("    expiresAt: ").append(toIndentedString(expiresAt)).append("\n");
    sb.append("    purchaseCountry: ").append(toIndentedString(purchaseCountry)).append("\n");
    sb.append("    purchaseCurrency: ").append(toIndentedString(purchaseCurrency)).append("\n");
    sb.append("    merchantReference: ").append(toIndentedString(merchantReference)).append("\n");
    sb.append("    billingAddress: ").append(toIndentedString(billingAddress)).append("\n");
    sb.append("    shippingAddress: ").append(toIndentedString(shippingAddress)).append("\n");
    sb.append("    traderId: ").append(toIndentedString(traderId)).append("\n");
    sb.append("    externalPaymentMethods: ").append(toIndentedString(externalPaymentMethods)).append("\n");
    sb.append("    externalCheckouts: ").append(toIndentedString(externalCheckouts)).append("\n");
    sb.append("    merchantOrderData: ").append(toIndentedString(merchantOrderData)).append("\n");
    sb.append("    merchantRequested: ").append(toIndentedString(merchantRequested)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

