/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.klarna.rest.api.customer_token.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.klarna.rest.api.customer_token.model.TokenCardInformation;
import com.klarna.rest.api.customer_token.model.TokenDirectDebitInformation;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * TokenCustomerTokenV1
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-04-02T14:27:39.889Z")
public class TokenCustomerTokenV1 {
  @JsonProperty("card")
  private TokenCardInformation card = null;

  @JsonProperty("direct_debit")
  private TokenDirectDebitInformation directDebit = null;

  @JsonProperty("payment_method_type")
  private String paymentMethodType = null;

  @JsonProperty("status")
  private String status = null;

  public TokenCustomerTokenV1 card(TokenCardInformation card) {
    this.card = card;
    return this;
  }

   /**
   * Card payment information
   * @return card
  **/
  @ApiModelProperty(value = "Card payment information")
  public TokenCardInformation getCard() {
    return card;
  }

  public void setCard(TokenCardInformation card) {
    this.card = card;
  }

  public TokenCustomerTokenV1 directDebit(TokenDirectDebitInformation directDebit) {
    this.directDebit = directDebit;
    return this;
  }

   /**
   * Direct debit payment information
   * @return directDebit
  **/
  @ApiModelProperty(value = "Direct debit payment information")
  public TokenDirectDebitInformation getDirectDebit() {
    return directDebit;
  }

  public void setDirectDebit(TokenDirectDebitInformation directDebit) {
    this.directDebit = directDebit;
  }

  public TokenCustomerTokenV1 paymentMethodType(String paymentMethodType) {
    this.paymentMethodType = paymentMethodType;
    return this;
  }

   /**
   * Selected payment method
   * @return paymentMethodType
  **/
  @ApiModelProperty(example = "INVOICE", required = true, value = "Selected payment method")
  public String getPaymentMethodType() {
    return paymentMethodType;
  }

  public void setPaymentMethodType(String paymentMethodType) {
    this.paymentMethodType = paymentMethodType;
  }

  public TokenCustomerTokenV1 status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Status of token, can be active, cancelled, suspended
   * @return status
  **/
  @ApiModelProperty(example = "ACTIVE", required = true, value = "Status of token, can be active, cancelled, suspended")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TokenCustomerTokenV1 customerTokenV1 = (TokenCustomerTokenV1) o;
    return Objects.equals(this.card, customerTokenV1.card) &&
        Objects.equals(this.directDebit, customerTokenV1.directDebit) &&
        Objects.equals(this.paymentMethodType, customerTokenV1.paymentMethodType) &&
        Objects.equals(this.status, customerTokenV1.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(card, directDebit, paymentMethodType, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TokenCustomerTokenV1 {\n");
    
    sb.append("    card: ").append(toIndentedString(card)).append("\n");
    sb.append("    directDebit: ").append(toIndentedString(directDebit)).append("\n");
    sb.append("    paymentMethodType: ").append(toIndentedString(paymentMethodType)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

