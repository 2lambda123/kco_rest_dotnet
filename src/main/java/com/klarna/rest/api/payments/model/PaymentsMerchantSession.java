/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.klarna.rest.api.payments.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.klarna.rest.api.payments.model.PaymentsPaymentMethodCategory;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * PaymentsMerchantSession
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-01-20T11:12:59.490Z")
public class PaymentsMerchantSession {
  @JsonProperty("client_token")
  private String clientToken = null;

  @JsonProperty("payment_method_categories")
  private List<PaymentsPaymentMethodCategory> paymentMethodCategories = null;

  @JsonProperty("session_id")
  private String sessionId = null;

  public PaymentsMerchantSession clientToken(String clientToken) {
    this.clientToken = clientToken;
    return this;
  }

   /**
   * Token to be passed to the JS client
   * @return clientToken
  **/
  @ApiModelProperty(example = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.ewogICJzZXNzaW9uX2lkIiA6ICIw", required = true, value = "Token to be passed to the JS client")
  public String getClientToken() {
    return clientToken;
  }

  public void setClientToken(String clientToken) {
    this.clientToken = clientToken;
  }

  public PaymentsMerchantSession paymentMethodCategories(List<PaymentsPaymentMethodCategory> paymentMethodCategories) {
    this.paymentMethodCategories = paymentMethodCategories;
    return this;
  }

  public PaymentsMerchantSession addPaymentMethodCategoriesItem(PaymentsPaymentMethodCategory paymentMethodCategoriesItem) {
    if (this.paymentMethodCategories == null) {
      this.paymentMethodCategories = new ArrayList<PaymentsPaymentMethodCategory>();
    }
    this.paymentMethodCategories.add(paymentMethodCategoriesItem);
    return this;
  }

   /**
   * Available payment method categories
   * @return paymentMethodCategories
  **/
  @ApiModelProperty(value = "Available payment method categories")
  public List<PaymentsPaymentMethodCategory> getPaymentMethodCategories() {
    return paymentMethodCategories;
  }

  public void setPaymentMethodCategories(List<PaymentsPaymentMethodCategory> paymentMethodCategories) {
    this.paymentMethodCategories = paymentMethodCategories;
  }

  public PaymentsMerchantSession sessionId(String sessionId) {
    this.sessionId = sessionId;
    return this;
  }

   /**
   * Id of the created session
   * @return sessionId
  **/
  @ApiModelProperty(example = "0b1d9815-165e-42e2-8867-35bc03789e00", required = true, value = "Id of the created session")
  public String getSessionId() {
    return sessionId;
  }

  public void setSessionId(String sessionId) {
    this.sessionId = sessionId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentsMerchantSession merchantSession = (PaymentsMerchantSession) o;
    return Objects.equals(this.clientToken, merchantSession.clientToken) &&
        Objects.equals(this.paymentMethodCategories, merchantSession.paymentMethodCategories) &&
        Objects.equals(this.sessionId, merchantSession.sessionId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientToken, paymentMethodCategories, sessionId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentsMerchantSession {\n");
    
    sb.append("    clientToken: ").append(toIndentedString(clientToken)).append("\n");
    sb.append("    paymentMethodCategories: ").append(toIndentedString(paymentMethodCategories)).append("\n");
    sb.append("    sessionId: ").append(toIndentedString(sessionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

