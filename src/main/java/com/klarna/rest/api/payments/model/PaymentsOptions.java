/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.klarna.rest.api.payments.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * PaymentsOptions
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-11-05T12:55:42.744Z")
public class PaymentsOptions {
  @JsonProperty("color_border")
  private String colorBorder = null;

  @JsonProperty("color_border_selected")
  private String colorBorderSelected = null;

  @JsonProperty("color_button")
  private String colorButton = null;

  @JsonProperty("color_button_text")
  private String colorButtonText = null;

  @JsonProperty("color_checkbox")
  private String colorCheckbox = null;

  @JsonProperty("color_checkbox_checkmark")
  private String colorCheckboxCheckmark = null;

  @JsonProperty("color_details")
  private String colorDetails = null;

  @JsonProperty("color_header")
  private String colorHeader = null;

  @JsonProperty("color_link")
  private String colorLink = null;

  @JsonProperty("color_text")
  private String colorText = null;

  @JsonProperty("color_text_secondary")
  private String colorTextSecondary = null;

  @JsonProperty("radius_border")
  private String radiusBorder = null;

  public PaymentsOptions colorBorder(String colorBorder) {
    this.colorBorder = colorBorder;
    return this;
  }

   /**
   * CSS hex color, e.g. \&quot;#FF9900\&quot;
   * @return colorBorder
  **/
  @ApiModelProperty(example = "#FF9900", value = "CSS hex color, e.g. \"#FF9900\"")
  public String getColorBorder() {
    return colorBorder;
  }

  public void setColorBorder(String colorBorder) {
    this.colorBorder = colorBorder;
  }

  public PaymentsOptions colorBorderSelected(String colorBorderSelected) {
    this.colorBorderSelected = colorBorderSelected;
    return this;
  }

   /**
   * CSS hex color, e.g. \&quot;#FF9900\&quot;
   * @return colorBorderSelected
  **/
  @ApiModelProperty(example = "#FF9900", value = "CSS hex color, e.g. \"#FF9900\"")
  public String getColorBorderSelected() {
    return colorBorderSelected;
  }

  public void setColorBorderSelected(String colorBorderSelected) {
    this.colorBorderSelected = colorBorderSelected;
  }

  public PaymentsOptions colorButton(String colorButton) {
    this.colorButton = colorButton;
    return this;
  }

   /**
   * CSS hex color, e.g. \&quot;#FF9900\&quot;
   * @return colorButton
  **/
  @ApiModelProperty(example = "#FF9900", value = "CSS hex color, e.g. \"#FF9900\"")
  public String getColorButton() {
    return colorButton;
  }

  public void setColorButton(String colorButton) {
    this.colorButton = colorButton;
  }

  public PaymentsOptions colorButtonText(String colorButtonText) {
    this.colorButtonText = colorButtonText;
    return this;
  }

   /**
   * CSS hex color, e.g. \&quot;#FF9900\&quot;
   * @return colorButtonText
  **/
  @ApiModelProperty(example = "#FF9900", value = "CSS hex color, e.g. \"#FF9900\"")
  public String getColorButtonText() {
    return colorButtonText;
  }

  public void setColorButtonText(String colorButtonText) {
    this.colorButtonText = colorButtonText;
  }

  public PaymentsOptions colorCheckbox(String colorCheckbox) {
    this.colorCheckbox = colorCheckbox;
    return this;
  }

   /**
   * CSS hex color, e.g. \&quot;#FF9900\&quot;
   * @return colorCheckbox
  **/
  @ApiModelProperty(example = "#FF9900", value = "CSS hex color, e.g. \"#FF9900\"")
  public String getColorCheckbox() {
    return colorCheckbox;
  }

  public void setColorCheckbox(String colorCheckbox) {
    this.colorCheckbox = colorCheckbox;
  }

  public PaymentsOptions colorCheckboxCheckmark(String colorCheckboxCheckmark) {
    this.colorCheckboxCheckmark = colorCheckboxCheckmark;
    return this;
  }

   /**
   * CSS hex color, e.g. \&quot;#FF9900\&quot;
   * @return colorCheckboxCheckmark
  **/
  @ApiModelProperty(example = "#FF9900", value = "CSS hex color, e.g. \"#FF9900\"")
  public String getColorCheckboxCheckmark() {
    return colorCheckboxCheckmark;
  }

  public void setColorCheckboxCheckmark(String colorCheckboxCheckmark) {
    this.colorCheckboxCheckmark = colorCheckboxCheckmark;
  }

  public PaymentsOptions colorDetails(String colorDetails) {
    this.colorDetails = colorDetails;
    return this;
  }

   /**
   * CSS hex color, e.g. \&quot;#FF9900\&quot;
   * @return colorDetails
  **/
  @ApiModelProperty(example = "#FF9900", value = "CSS hex color, e.g. \"#FF9900\"")
  public String getColorDetails() {
    return colorDetails;
  }

  public void setColorDetails(String colorDetails) {
    this.colorDetails = colorDetails;
  }

  public PaymentsOptions colorHeader(String colorHeader) {
    this.colorHeader = colorHeader;
    return this;
  }

   /**
   * CSS hex color, e.g. \&quot;#FF9900\&quot;
   * @return colorHeader
  **/
  @ApiModelProperty(example = "#FF9900", value = "CSS hex color, e.g. \"#FF9900\"")
  public String getColorHeader() {
    return colorHeader;
  }

  public void setColorHeader(String colorHeader) {
    this.colorHeader = colorHeader;
  }

  public PaymentsOptions colorLink(String colorLink) {
    this.colorLink = colorLink;
    return this;
  }

   /**
   * CSS hex color, e.g. \&quot;#FF9900\&quot;
   * @return colorLink
  **/
  @ApiModelProperty(example = "#FF9900", value = "CSS hex color, e.g. \"#FF9900\"")
  public String getColorLink() {
    return colorLink;
  }

  public void setColorLink(String colorLink) {
    this.colorLink = colorLink;
  }

  public PaymentsOptions colorText(String colorText) {
    this.colorText = colorText;
    return this;
  }

   /**
   * CSS hex color, e.g. \&quot;#FF9900\&quot;
   * @return colorText
  **/
  @ApiModelProperty(example = "#FF9900", value = "CSS hex color, e.g. \"#FF9900\"")
  public String getColorText() {
    return colorText;
  }

  public void setColorText(String colorText) {
    this.colorText = colorText;
  }

  public PaymentsOptions colorTextSecondary(String colorTextSecondary) {
    this.colorTextSecondary = colorTextSecondary;
    return this;
  }

   /**
   * CSS hex color, e.g. \&quot;#FF9900\&quot;
   * @return colorTextSecondary
  **/
  @ApiModelProperty(example = "#FF9900", value = "CSS hex color, e.g. \"#FF9900\"")
  public String getColorTextSecondary() {
    return colorTextSecondary;
  }

  public void setColorTextSecondary(String colorTextSecondary) {
    this.colorTextSecondary = colorTextSecondary;
  }

  public PaymentsOptions radiusBorder(String radiusBorder) {
    this.radiusBorder = radiusBorder;
    return this;
  }

   /**
   * Border radius
   * @return radiusBorder
  **/
  @ApiModelProperty(example = "5px", value = "Border radius")
  public String getRadiusBorder() {
    return radiusBorder;
  }

  public void setRadiusBorder(String radiusBorder) {
    this.radiusBorder = radiusBorder;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentsOptions options = (PaymentsOptions) o;
    return Objects.equals(this.colorBorder, options.colorBorder) &&
        Objects.equals(this.colorBorderSelected, options.colorBorderSelected) &&
        Objects.equals(this.colorButton, options.colorButton) &&
        Objects.equals(this.colorButtonText, options.colorButtonText) &&
        Objects.equals(this.colorCheckbox, options.colorCheckbox) &&
        Objects.equals(this.colorCheckboxCheckmark, options.colorCheckboxCheckmark) &&
        Objects.equals(this.colorDetails, options.colorDetails) &&
        Objects.equals(this.colorHeader, options.colorHeader) &&
        Objects.equals(this.colorLink, options.colorLink) &&
        Objects.equals(this.colorText, options.colorText) &&
        Objects.equals(this.colorTextSecondary, options.colorTextSecondary) &&
        Objects.equals(this.radiusBorder, options.radiusBorder);
  }

  @Override
  public int hashCode() {
    return Objects.hash(colorBorder, colorBorderSelected, colorButton, colorButtonText, colorCheckbox, colorCheckboxCheckmark, colorDetails, colorHeader, colorLink, colorText, colorTextSecondary, radiusBorder);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentsOptions {\n");
    
    sb.append("    colorBorder: ").append(toIndentedString(colorBorder)).append("\n");
    sb.append("    colorBorderSelected: ").append(toIndentedString(colorBorderSelected)).append("\n");
    sb.append("    colorButton: ").append(toIndentedString(colorButton)).append("\n");
    sb.append("    colorButtonText: ").append(toIndentedString(colorButtonText)).append("\n");
    sb.append("    colorCheckbox: ").append(toIndentedString(colorCheckbox)).append("\n");
    sb.append("    colorCheckboxCheckmark: ").append(toIndentedString(colorCheckboxCheckmark)).append("\n");
    sb.append("    colorDetails: ").append(toIndentedString(colorDetails)).append("\n");
    sb.append("    colorHeader: ").append(toIndentedString(colorHeader)).append("\n");
    sb.append("    colorLink: ").append(toIndentedString(colorLink)).append("\n");
    sb.append("    colorText: ").append(toIndentedString(colorText)).append("\n");
    sb.append("    colorTextSecondary: ").append(toIndentedString(colorTextSecondary)).append("\n");
    sb.append("    radiusBorder: ").append(toIndentedString(radiusBorder)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

