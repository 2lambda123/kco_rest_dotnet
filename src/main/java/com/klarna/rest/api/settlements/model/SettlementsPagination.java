/*
 * Klarna Settlements API
 * This API gives you access to your payouts and transactions.     Resources are split into two broad types:     * Collections, including pagination information:      collections are queryable, typically by the attributes of the sub-resource      as well as pagination.    * Entity resources containing a single entity.
 *
 * OpenAPI spec version: 1.0.0-rc2
 * Contact: integration@klarna.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.klarna.rest.api.settlements.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * SettlementsPagination
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-02T15:08:22.912Z")
public class SettlementsPagination {
  @JsonProperty("count")
  private Long count = null;

  @JsonProperty("total")
  private Long total = null;

  @JsonProperty("next")
  private String next = null;

  @JsonProperty("prev")
  private String prev = null;

  @JsonProperty("offset")
  private Long offset = null;

  public SettlementsPagination count(Long count) {
    this.count = count;
    return this;
  }

   /**
   * The amount of elements in the current result
   * @return count
  **/
  @ApiModelProperty(example = "10", required = true, value = "The amount of elements in the current result")
  public Long getCount() {
    return count;
  }

  public void setCount(Long count) {
    this.count = count;
  }

  public SettlementsPagination total(Long total) {
    this.total = total;
    return this;
  }

   /**
   * The total amount of elements that are available
   * @return total
  **/
  @ApiModelProperty(example = "42", value = "The total amount of elements that are available")
  public Long getTotal() {
    return total;
  }

  public void setTotal(Long total) {
    this.total = total;
  }

  public SettlementsPagination next(String next) {
    this.next = next;
    return this;
  }

   /**
   * The URI to the next \&quot;page\&quot; of results.
   * @return next
  **/
  @ApiModelProperty(example = "http://example.com/collection?offset=21&size=10", value = "The URI to the next \"page\" of results.")
  public String getNext() {
    return next;
  }

  public void setNext(String next) {
    this.next = next;
  }

  public SettlementsPagination prev(String prev) {
    this.prev = prev;
    return this;
  }

   /**
   * The URI to the previous \&quot;page\&quot; of results.
   * @return prev
  **/
  @ApiModelProperty(example = "http://example.com/collection?offset=0&size=10", value = "The URI to the previous \"page\" of results.")
  public String getPrev() {
    return prev;
  }

  public void setPrev(String prev) {
    this.prev = prev;
  }

  public SettlementsPagination offset(Long offset) {
    this.offset = offset;
    return this;
  }

   /**
   * The current offset. Describes \&quot;where\&quot; in a collection the current starts.
   * @return offset
  **/
  @ApiModelProperty(example = "10", value = "The current offset. Describes \"where\" in a collection the current starts.")
  public Long getOffset() {
    return offset;
  }

  public void setOffset(Long offset) {
    this.offset = offset;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SettlementsPagination pagination = (SettlementsPagination) o;
    return Objects.equals(this.count, pagination.count) &&
        Objects.equals(this.total, pagination.total) &&
        Objects.equals(this.next, pagination.next) &&
        Objects.equals(this.prev, pagination.prev) &&
        Objects.equals(this.offset, pagination.offset);
  }

  @Override
  public int hashCode() {
    return Objects.hash(count, total, next, prev, offset);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SettlementsPagination {\n");
    
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    next: ").append(toIndentedString(next)).append("\n");
    sb.append("    prev: ").append(toIndentedString(prev)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

