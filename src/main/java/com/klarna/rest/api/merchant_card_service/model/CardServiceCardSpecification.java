/*
 * 
 * 
 *
 * 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.klarna.rest.api.merchant_card_service.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * CardServiceCardSpecification
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-04-02T14:59:55.645Z")
public class CardServiceCardSpecification {
  @JsonProperty("amount")
  private Long amount = null;

  @JsonProperty("currency")
  private String currency = null;

  @JsonProperty("fund_amount")
  private Long fundAmount = null;

  @JsonProperty("reference")
  private String reference = null;

  public CardServiceCardSpecification amount(Long amount) {
    this.amount = amount;
    return this;
  }

   /**
   * The total purchase amount on a card
   * minimum: 1
   * @return amount
  **/
  @ApiModelProperty(example = "10000", required = true, value = "The total purchase amount on a card")
  public Long getAmount() {
    return amount;
  }

  public void setAmount(Long amount) {
    this.amount = amount;
  }

  public CardServiceCardSpecification currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * The amount currency
   * @return currency
  **/
  @ApiModelProperty(example = "USD", required = true, value = "The amount currency")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public CardServiceCardSpecification fundAmount(Long fundAmount) {
    this.fundAmount = fundAmount;
    return this;
  }

   /**
   * The funded amount that will be on a card
   * @return fundAmount
  **/
  @ApiModelProperty(example = "10000", value = "The funded amount that will be on a card")
  public Long getFundAmount() {
    return fundAmount;
  }

  public void setFundAmount(Long fundAmount) {
    this.fundAmount = fundAmount;
  }

  public CardServiceCardSpecification reference(String reference) {
    this.reference = reference;
    return this;
  }

   /**
   * Your reference on the card
   * @return reference
  **/
  @ApiModelProperty(example = "yPGw6i4lR0GTcyxGpS3Q6Q==", required = true, value = "Your reference on the card")
  public String getReference() {
    return reference;
  }

  public void setReference(String reference) {
    this.reference = reference;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CardServiceCardSpecification cardSpecification = (CardServiceCardSpecification) o;
    return Objects.equals(this.amount, cardSpecification.amount) &&
        Objects.equals(this.currency, cardSpecification.currency) &&
        Objects.equals(this.fundAmount, cardSpecification.fundAmount) &&
        Objects.equals(this.reference, cardSpecification.reference);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, currency, fundAmount, reference);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CardServiceCardSpecification {\n");
    
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    fundAmount: ").append(toIndentedString(fundAmount)).append("\n");
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

